{"version":3,"file":"static/js/137.35e60cbc.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 40px;\n  padding-left: 40px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n  color: grey;\n`;\n\nexport const List = styled.ul`\n  list-style: disc;\n  color: teal;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: teal;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: blue;\n    border-bottom: 2px solid blue;\n  }\n`;\n\nexport const NotFoundText = styled.h4`\n  color: #000;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: #b5d1f2;\n  border: 1px solid #0d57aa;\n  border-radius: 3px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Form, Input, Button } from './SearchMovies.styled';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const query = event.target.elements.query.value;\n\n    if (query.trim() === '') {\n      alert('Enter a search query!');\n      return;\n    }\n    onSubmit(query);\n    event.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default SearchMovies;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport Spinner from 'components/Loader/Loader';\nimport { fetchMovieByName } from 'services/api';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport {\n  StyledSection,\n  List,\n  ListItem,\n  StyledLink,\n  NotFoundText,\n} from 'components/MovieList/MovieList.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    setStatus('pending');\n    const getMovie = async () => {\n      try {\n        const { results } = await fetchMovieByName(query);\n        setMovies(results);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    };\n\n    getMovie();\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n    setMovies([]);\n    setStatus('idle');\n  };\n\n  return (\n    <main>\n      <StyledSection>\n        <SearchMovies onSubmit={handleSubmit} />\n        {status === 'pending' && <Spinner />}\n        {status === 'rejected' && <h4>{'An error occurred!'}</h4>}\n        {status === 'resolved' && (\n          <List>\n            {movies && movies.length === 0 && (\n              <NotFoundText>Nothing was found for this query.</NotFoundText>\n            )}\n            {movies.map(({ id, title }) => (\n              <ListItem key={id}>\n                <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </StyledLink>\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </StyledSection>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '404ca53f902a08bf3140e0fd0ad0a560';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};"],"names":["StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","NotFoundText","Form","Input","Button","onSubmit","event","preventDefault","query","target","elements","value","trim","reset","alert","name","type","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","status","setStatus","location","useLocation","useEffect","get","getMovie","fetchMovieByName","results","console","log","length","map","id","title","to","state","from","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}