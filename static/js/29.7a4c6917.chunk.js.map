{"version":3,"file":"static/js/29.7a4c6917.chunk.js","mappings":"2UAGaA,EAAgBC,EAAAA,EAAAA,QAAH,6FAMbC,EAAeD,EAAAA,EAAAA,GAAH,wGAOZE,EAAOF,EAAAA,EAAAA,GAAH,sFAMJG,EAAWH,EAAAA,EAAAA,GAAH,8EAMRI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,qQAaVM,EAAeN,EAAAA,EAAAA,GAAH,uC,8JCFzB,EA7BkB,SAAC,GAAwB,IAAtBO,EAAqB,EAArBA,eACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAc,oBACd,SAAC,KAAD,UACGF,GACCA,EAAeG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACjB,SAAC,KAAD,WACE,SAAC,KAAD,CAAYC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAhD,SACGI,KAFUD,EADE,QAU5B,E,SCMD,EA7Ba,WACX,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOT,EAAP,KAAuBU,EAAvB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,WAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,gHAEEC,EAAAA,EAAAA,MAFF,gBAEhBC,EAFgB,EAEhBA,QACRR,EAAkBQ,GAClBN,EAAU,YAJc,gDAMxBE,EAAS,EAAD,IACRF,EAAU,YAPc,yDAAH,qDAWzBI,GACD,GAAE,KAGD,gCACc,YAAXL,IAAwB,SAAC,IAAD,IACb,aAAXA,IAAyB,wBAAKE,EAAMM,UACzB,aAAXR,IAAyB,SAAC,EAAD,CAAWX,eAAgBA,MAG1D,C,mMC9BKoB,EAAW,+BACXC,EAAU,mCAEHJ,EAAgB,mCAAG,sGACPK,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,IAFd,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeC,EADf,iCAC+CI,EAD/C,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,oBACmBN,EADnB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC2BN,EAD3B,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC2BN,EAD3B,2BADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-top: 30px;\n  padding-right: 40px;\n  padding-left: 40px;\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n  color: grey;\n`;\n\nexport const List = styled.ul`\n  padding-top: 30px;\n  list-style: disc;\n  color: #0c6aad;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0c6aad;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border-bottom 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: blue;\n    border-bottom: 1px solid blue;\n  }\n`;\n\nexport const NotFoundText = styled.h4`\n  color: #000;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledSection,\n  SectionTitle,\n  List,\n  ListItem,\n  StyledLink,\n} from './MovieList.styled';\n\nconst MovieList = ({ trendingMovies }) => {\n  const location = useLocation();\n\n  return (\n    <StyledSection>\n      <SectionTitle>Trending today</SectionTitle>\n      <List>\n        {trendingMovies &&\n          trendingMovies.map(({ id, title }) => (\n            <ListItem key={id}>\n              <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </StyledLink>\n            </ListItem>\n          ))}\n      </List>\n    </StyledSection>\n  );\n};\n\nMovieList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { fetchTrendMovies } from 'services/api';\nimport MovieList from 'components/MovieList';\nimport Spinner from 'components/Loader';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [status, setStatus] = useState('pending');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const { results } = await fetchTrendMovies();\n        setTrendingMovies(results);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {status === 'pending' && <Spinner />}\n      {status === 'rejected' && <h3>{error.message}</h3>}\n      {status === 'resolved' && <MovieList trendingMovies={trendingMovies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '404ca53f902a08bf3140e0fd0ad0a560';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};"],"names":["StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","NotFoundText","trendingMovies","location","useLocation","map","id","title","to","state","from","useState","setTrendingMovies","status","setStatus","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","message","BASE_URL","API_KEY","axios","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}