{"version":3,"file":"static/js/244.6b702438.chunk.js","mappings":"qSAEaA,EAAOC,EAAAA,EAAAA,IAAH,qHAOJC,EAAcD,EAAAA,EAAAA,GAAH,+CAIXE,EAAaF,EAAAA,EAAAA,GAAH,yHAQVG,EAAiBH,EAAAA,EAAAA,GAAH,sFAKdI,EAASJ,EAAAA,EAAAA,GAAH,yFAMNK,EAAgBL,EAAAA,EAAAA,EAAH,oE,SC6B1B,EAhDgB,WACd,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,WAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMV,GAAN,mGAESW,EAAAA,EAAAA,IAAkBX,GAF3B,gBAETY,EAFS,EAETA,QACRR,EAAWQ,GACXN,EAAU,YAJO,gDAMjBE,EAAS,EAAD,IACRF,EAAU,YAPO,yDAAH,sDAWlBI,EAAaV,EACd,GAAE,CAACA,KAGF,gCACc,YAAXK,IAAwB,SAAC,IAAD,IACb,aAAXA,IAAyB,wBAAKE,EAAMM,UACzB,aAAXR,IACC,UAACZ,EAAD,YACE,SAACE,EAAD,UAAa,YACZQ,EAAQW,QACP,SAAClB,EAAD,UACGO,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACrB,EAAD,YACE,UAACC,EAAD,WAAQ,WAASmB,MACjB,uBAAIC,MAFeF,EADV,OAQf,SAACjB,EAAD,UAAe,uDAQ1B,C,mMCzDKoB,EAAW,+BACXC,EAAUC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,kBAEfC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBL,EADkB,uCACqBC,IAFd,uBACtBK,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iCACeC,EADf,iCAC+CO,EAD/C,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAM5B,GAAN,yFACLwB,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAnB,EADA,oBACmBoB,EADnB,oBADK,uBACpBK,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAc,mCAAG,WAAM7B,GAAN,yFACLwB,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAnB,EADA,4BAC2BoB,EAD3B,oBADK,uBACpBK,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdd,EAAiB,mCAAG,WAAMX,GAAN,yFACRwB,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAnB,EADA,4BAC2BoB,EAD3B,2BADQ,uBACvBK,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  margin-top: 30px;\n  padding-right: 40px;\n  padding-left: 40px;\n  padding-bottom: 40px;\n`;\n\nexport const ReviewTitle = styled.h3`\n  text-align: center;\n`;\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  margin-top: 30px;\n  align-items: center;\n`;\n\nexport const ReviewListItem = styled.li`\n  padding-bottom: 10px;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const Author = styled.h4`\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const NoReviewsText = styled.p`\n  margin-top: 20px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\nimport Spinner from 'components/Loader';\nimport {\n  Wrap,\n  ReviewTitle,\n  ReviewList,\n  ReviewListItem,\n  Author,\n  NoReviewsText,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('pending');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async movieId => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && <Spinner />}\n      {status === 'rejected' && <h3>{error.message}</h3>}\n      {status === 'resolved' && (\n        <Wrap>\n          <ReviewTitle>Reviews</ReviewTitle>\n          {reviews.length ? (\n            <ReviewList>\n              {reviews.map(({ id, author, content }) => (\n                <ReviewListItem key={id}>\n                  <Author>Author: {author}</Author>\n                  <p>{content}</p>\n                </ReviewListItem>\n              ))}\n            </ReviewList>\n          ) : (\n            <NoReviewsText>\n              We don't have any reviews for this movie yet.\n            </NoReviewsText>\n          )}\n        </Wrap>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};"],"names":["Wrap","styled","ReviewTitle","ReviewList","ReviewListItem","Author","NoReviewsText","movieId","useParams","useState","reviews","setReviews","status","setStatus","error","setError","useEffect","fetchReviews","fetchMovieReviews","results","message","length","map","id","author","content","BASE_URL","API_KEY","process","REACT_APP_API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieById","fetchMovieCast"],"sourceRoot":""}