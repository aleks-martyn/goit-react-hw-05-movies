{"version":3,"file":"static/js/815.d94c025f.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieWrap = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n`;\n\nexport const MovieInfoWrap = styled.div`\n  padding-top: 20px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const MovieSubTitle = styled.h3`\n  margin-bottom: 20px;\n`;\n\nexport const MovieText = styled.p`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const MoreInfoWrap = styled.div`\n  margin-top: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-top: 1px solid #d3d3d3;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const LinksList = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  gap: 20px;\n  font-size: 18px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  margin: 0;\n  padding: 6px 15px;\n  border: 0;\n  border-radius: 3px;\n  color: #fff;\n  background-color: #2196f3;\n  font-size: 16px;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieWrap,\n  MovieInfoWrap,\n  MovieTitle,\n  MovieSubTitle,\n  MovieText,\n  MoreInfoWrap,\n  LinksList,\n  ListItem,\n  StyledLink,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movie;\n\n  const location = useLocation();\n\n  const releaseDate = new Date(release_date);\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n    : 'https://via.placeholder.com/342x513.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  return (\n    <>\n      <MovieWrap>\n        <img src={posterUrl} alt={`${title}`} />\n        <MovieInfoWrap>\n          <MovieTitle>\n            {title ?? 'Unknown'} ({releaseYear})\n          </MovieTitle>\n          <MovieText>User Score: {userScore}</MovieText>\n          <MovieSubTitle>Overview</MovieSubTitle>\n          <MovieText>{overview}</MovieText>\n          {genres && genres.length > 0 && (\n            <>\n              <MovieSubTitle>Genres</MovieSubTitle>\n              <MovieText>\n                {genres.map(genre => genre.name).join(', ')}\n              </MovieText>\n            </>\n          )}\n        </MovieInfoWrap>\n      </MovieWrap>\n\n      <MoreInfoWrap>\n        <MovieSubTitle>Additional information</MovieSubTitle>\n        <LinksList>\n          <ListItem>\n            <StyledLink\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </StyledLink>\n          </ListItem>\n        </LinksList>\n      </MoreInfoWrap>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\nimport { BsArrowLeftShort } from 'react-icons/bs';\n\nexport const Wrap = styled.div`\n  padding: 20px 35px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 6px 15px;\n  height: 30px;\n  border: 0;\n  border-radius: 3px;\n  font-size: 16px;\n  color: #fff;\n  background-color: #2196f3;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #188ce8;\n  }\n`;\n\nexport const LeftArrow = styled(BsArrowLeftShort)`\n  width: 25px;\n  height: 25px;\n  display: inline-block;\n`;\n","import { Suspense, useState, useEffect } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieById } from 'services/api';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { Wrap, Button, LeftArrow } from './MovieDetails.styled';\nimport Spinner from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const [status, setStatus] = useState('pending');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setSelectedMovie(movieData);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      {status === 'pending' && <Spinner />}\n      {status === 'rejected' && <h3>{error.message}</h3>}\n      {status === 'resolved' && (\n        <Wrap>\n          <Link to={location?.state?.from ?? '/'}>\n            <Button type=\"button\">\n              <LeftArrow />\n              Go back\n            </Button>\n          </Link>\n\n          <MovieCard movie={selectedMovie} />\n          <Suspense fallback={<Spinner />}>\n            <Outlet />\n          </Suspense>\n        </Wrap>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '404ca53f902a08bf3140e0fd0ad0a560';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};"],"names":["MovieWrap","styled","MovieInfoWrap","MovieTitle","MovieSubTitle","MovieText","MoreInfoWrap","LinksList","ListItem","StyledLink","Link","movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","state","from","Wrap","Button","LeftArrow","BsArrowLeftShort","movieId","useParams","useState","selectedMovie","setSelectedMovie","status","setStatus","error","setError","useEffect","fetchSelectedMovie","fetchMovieById","movieData","message","type","Suspense","fallback","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}